{"version":3,"sources":["logo.svg","components/Navbar/Navbar.js","components/SearchForm/SearchForm.js","components/SearchResult/result.js","utils/api.js","components/EmployeeContainer/EmployeeContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","SearchForm","props","htmlFor","onChange","handleInputChange","value","name","type","placeholder","id","Result","console","log","scope","results","map","result","last","first","location","city","state","cell","src","picture","thumbnail","alt","API","getEmployeeData","axios","get","EmployeeContainer","users","search","event","setState","target","filter","user","toLowerCase","includes","handleSort","sort","a","b","then","res","data","catch","err","window","reload","this","handleRefresh","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAAe,I,qCCcAA,MAZf,WACI,OACI,qBAAKC,UAAU,4BAAf,SACA,sBAAKA,UAAU,YAAf,UACA,oBAAIA,UAAU,YAAd,gCACA,mBAAGA,UAAU,OAAb,kG,MCgBOC,MApBf,SAAoBC,GAClB,OACE,+BACE,sBAAKF,UAAU,aAAf,UACE,uBAAOG,QAAQ,WACf,uBACEC,SAAUF,EAAMG,kBAChBC,MAAOJ,EAAMI,MACbC,KAAK,SACLC,KAAK,OACLR,UAAU,eACVS,YAAY,wBACZC,GAAG,iBCkBEC,MA/Bf,SAAgBT,GAEZ,OADAU,QAAQC,IAAIX,GAGR,wBAAOF,UAAU,QAAjB,UACI,gCACI,+BACI,oBAAIc,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,0BAGR,gCACKZ,EAAMa,QAAQC,KAAI,SAAAC,GAAM,OACrB,+BACA,oBAAIH,MAAM,QACV,6BAAKG,EAAOV,KAAKW,OACjB,6BAAKD,EAAOV,KAAKY,QACjB,+BAAKF,EAAOG,SAASC,KAArB,KAA6BJ,EAAOG,SAASE,SAC7C,6BAAKL,EAAOM,OACZ,6BAAI,qBAAKC,IAAKP,EAAOQ,QAAQC,UAAWC,IAAI,kBANnCV,EAAOP,GAAGJ,gB,iBCVxBsB,EANH,CACVC,gBAAiB,WACf,OAAOC,IAAMC,IAAI,kDCwENC,E,4MApEXV,MAAQ,CACJP,QAAS,GACTkB,MAAO,GACPC,OAAQ,I,EAUZ7B,kBAAoB,SAAA8B,GAEhB,EAAKC,SAAS,CAAEF,OAAQC,EAAME,OAAO/B,QAFZ,MAIC,EAAKgB,MAAvBY,EAJiB,EAIjBA,OAAQD,EAJS,EAITA,MAGhB,GAAe,KAAXC,EAAJ,CAKI,IAAMnB,EAAUkB,EAAMK,QAAO,SAAAC,GAAI,OAAIA,EAAKhC,KAAKY,MAAMqB,cAAcC,SAASP,EAAOM,kBAEnF,EAAKJ,SAAS,CAAErB,c,EASxB2B,WAAa,WAAM,IAITC,EAFc,EAAKrB,MAAjBP,QAEa4B,MAAK,SAACC,EAAGC,GAC1B,OAAID,EAAExB,SAASE,MAAQuB,EAAEzB,SAASE,MAAgB,GACnC,KAGnB,EAAKc,SAAS,CAAErB,QAAS4B,K,kEAvCR,IAAD,OAChBf,EAAIC,kBACHiB,MACG,SAAAC,GAAG,OAAI,EAAKX,SAAS,CAACrB,QAASgC,EAAIC,KAAKjC,QAAQkB,MAAOc,EAAIC,KAAKjC,aAClEkC,OAAM,SAAAC,GAAG,OAAItC,QAAQC,IAAIqC,Q,sCAuB3BC,OAAO/B,SAASgC,W,+BAiBhB,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,CACI/C,kBAAmBgD,KAAKhD,kBACxBiD,cAAeD,KAAKC,gBAExB,cAAC,EAAD,CACAvC,QAASsC,KAAK/B,MAAMP,QACpB2B,WAAYW,KAAKX,oB,GA7DDa,aCOjBC,MARf,WACE,OAEE,cAAC,EAAD,KCGWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d638d144.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\n\nfunction Navbar (){\n    return (\n        <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n        <h1 className=\"display-4\">Employee Directory</h1>\n        <p className=\"lead\">Click on carrots to filter by handing or use the search box to narrow results.</p>\n        </div>\n        </div>\n    )\n}\n\n\nexport default Navbar;","import React from \"react\";\nimport \"./style.css\"\n\nfunction SearchForm(props) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"search\"></label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.value}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search For a Employee\"\n          id=\"search\"\n        />\n      </div>\n    </form>\n  )\n}\n\n\nexport default SearchForm;","import React from \"react\";\n\nfunction Result(props) {\n    console.log(props)\n    return (\n\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Last name</th>\n                    <th scope=\"col\">First Name</th>\n                    <th scope=\"col\">Location</th>\n                    <th scope=\"col\">Phone Number</th>\n                    <th scope=\"col\">Picture</th>\n                </tr>\n            </thead>\n            <tbody>\n                {props.results.map(result => (\n                    <tr key={result.id.value}>\n                    <th scope=\"row\"></th>\n                    <td>{result.name.last}</td>\n                    <td>{result.name.first}</td>\n                    <td>{result.location.city}, {result.location.state}</td>\n                    <td>{result.cell}</td>\n                    <td><img src={result.picture.thumbnail} alt=\"thumbnail\" /></td>\n                </tr>\n                ))}\n            </tbody>\n        </table>\n    )\n}\n\nexport default Result;\n","\nimport axios from \"axios\";\n\nconst API = {\n  getEmployeeData: function () {\n    return axios.get(\"https://randomuser.me/api/?results=20&nat=us\");\n  }\n}\n\nexport default API;\n\n\n\n\n\n\n\n","import React, {Component, useState} from \"react\";\nimport Navbar from \"../Navbar/Navbar\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport Result from \"../SearchResult/result\";\nimport API from \"../../utils/api\"\n\n\nclass EmployeeContainer extends Component {\n    \n    state = {\n        results: [],\n        users: [],\n        search: \"\"\n    };\n\n    componentDidMount() {\n        API.getEmployeeData()\n        .then(\n            res => this.setState({results: res.data.results,users: res.data.results})\n        ).catch(err => console.log(err));\n    }\n\n    handleInputChange = event => {\n        // Set our search state on the users input\n        this.setState({ search: event.target.value })\n        // Deconstruct state for our filtering method\n        const { search, users } = this.state;\n\n        // if search is empty do nothing.\n        if (search === \"\") {\n            return;\n        }\n        // if search is not empty start the filtering.\n        else {\n            const results = users.filter(user => user.name.first.toLowerCase().includes(search.toLowerCase()));\n            // Set our results state for use later.\n            this.setState({ results });\n        }\n    };\n\n    handleRefresh() {\n        // Simply refreshes the window\n        window.location.reload();\n    }\n\n    handleSort = () => {\n        // pull in our results from state so we can sort\n        const { results } = this.state;\n        // store the results of our sort method in sort variable\n        const sort = results.sort((a, b) => {\n            if (a.location.state > b.location.state) { return 1 } // return 1 for a to b to the right of b (Alphabetical)\n            else { return -1 } // return -1 for a to be to the left of b (Not Alphabetical)\n        })\n        // Push our newly sorted sort variable into our results state\n        this.setState({ results: sort })\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Navbar />\n                <SearchForm\n                    handleInputChange={this.handleInputChange}\n                    handleRefresh={this.handleRefresh}\n                />\n                <Result\n                results={this.state.results}\n                handleSort={this.handleSort}\n                />\n            </div>\n        )\n\n    }\n}\n\n\nexport default EmployeeContainer;","import logo from './logo.svg';\nimport './App.css';\nimport EmployeeContainer from \"./components/EmployeeContainer/EmployeeContainer\";\n\n\n\nfunction App() {\n  return (\n\n    <EmployeeContainer />\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}